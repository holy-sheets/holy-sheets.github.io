---
import type { MarkdownLayoutProps } from "astro";
import Sidebar, { type SidebarItem } from "../components/Sidebar.astro";
import Main from "../components/Main.astro";
import Header from "../components/Header.astro";

type MarkdownModule = {
  frontmatter: {
    title: string;
    slug: string;
    icon: string;
  };
  url: string;
};

const docs: Record<string, MarkdownModule> = import.meta.glob(
  "../pages/docs/**/*.md",
  {
    eager: true,
  },
);

const slugs = [
  "introduction",
  "usage",
  "getting-credentials",
  "api",
  "filters",
  "note",
];

const sidebarItems: SidebarItem[] = slugs.map((slug) => {
  const doc = Object.values(docs || {}).find(
    (doc) => doc.frontmatter.slug === slug,
  );
  if (!doc) throw new Error(`Doc not found for slug: ${slug}`);

  return {
    icon: doc.frontmatter.icon,
    label: doc.frontmatter.title,
    href: doc.url,
    slug: doc.frontmatter.slug,
  };
});

type Props = MarkdownLayoutProps<{
  title: string;
  previous?: string;
  next?: string;
  slug: string;
}>;

const { title, slug } = Astro.props.frontmatter;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title ? title + " - Holysheets!" : ""}</title>
  </head>
  <body class="flex flex-col">
    <Header />
    <div class="flex flex-col md:flex-row container mx-auto">
      <Sidebar items={sidebarItems} active={slug} />
      <Main>
        <slot />
      </Main>
    </div>
  </body>
</html>
