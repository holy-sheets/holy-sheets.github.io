---
import Icons from "./Icons.astro";
export interface SidebarItem {
  icon: string;
  label: string;
  href: string;
  slug: string;
  children?: {
    label: string;
    href: string;
  }[];
}

interface Props {
  items: SidebarItem[];
  active: string;
}

const { items, active } = Astro.props;
---

<aside
  class="flex md:w-[284px] bg-slate-100 p-4 md:px-6
    before:content-[''] before:absolute before:bg-slate-100
    before:h-full before:w-screen before:right-[100%] before:top-0
    md:border-r-slate-200 md:border-r relative min-h-screen"
>
  <ul
    class="flex flex-col w-full gap-y-2 md:sticky md:top-0 md:h-[0px] min-h-auto"
  >
    {
      items.map((item: SidebarItem) => {
        return (
          <li class="w-full">
            <a
              class={`hover:bg-slate-200 transition p-2 rounded-lg w-full text-slate-800 flex
              ${active === item.slug ? "bg-slate-200" : ""}`}
              href={item.href}
            >
              <span class="text-sm flex">
                <Icons icon={item.icon} />
              </span>
              {item.label}
            </a>
            {item.children && item.children.length > 0 && (
              <ul>
                {item.children.map((child) => (
                  <li class="pl-4">
                    <a
                      class="flex text-sm py-2 ml-4 text-slate-500 hover:text-slate-800 transition"
                      href={child.href}
                    >
                      {child.label}
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </li>
        );
      })
    }
  </ul>
</aside>
