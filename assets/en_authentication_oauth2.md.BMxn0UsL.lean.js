import{_ as i,c as t,a2 as n,o as a}from"./chunks/framework.BQmytedh.js";const d=JSON.parse('{"title":"Authentication","description":"Comprehensive guide to setting up OAuth2 and JWT authentication with HolySheets.","frontmatter":{"title":"Authentication","description":"Comprehensive guide to setting up OAuth2 and JWT authentication with HolySheets."},"headers":[],"relativePath":"en/authentication/oauth2.md","filePath":"en/authentication/oauth2.md"}'),e={name:"en/authentication/oauth2.md"};function l(o,s,h,r,p,k){return a(),t("div",null,s[0]||(s[0]=[n(`<h1 id="authentication" tabindex="-1">Authentication <a class="header-anchor" href="#authentication" aria-label="Permalink to &quot;Authentication&quot;">​</a></h1><p>HolySheets supports multiple authentication methods to securely interact with your Google Sheets. This guide covers two primary authentication methods: <strong>OAuth2</strong> and <strong>JWT</strong>. Follow the steps below to configure each method and integrate them into your HolySheets project.</p><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ol><li><a href="#oauth2-authentication">OAuth2 Authentication</a><ul><li><a href="#11-configuring-oauth2-credentials-in-google-cloud-console">1.1. Configuring OAuth2 Credentials in Google Cloud Console</a></li><li><a href="#12-obtaining-a-refresh-token">1.2. Obtaining a Refresh Token</a></li><li><a href="#13-integrating-oauth2-with-holysheets">1.3. Integrating OAuth2 with HolySheets</a></li><li><a href="#14-inserting-data-example">1.4. Inserting Data Example</a></li></ul></li><li><a href="#jwt-authentication">JWT Authentication</a><ul><li><a href="#21-configuring-jwt-credentials-in-google-cloud-console">2.1. Configuring JWT Credentials in Google Cloud Console</a></li><li><a href="#22-integrating-jwt-with-holysheets">2.2. Integrating JWT with HolySheets</a></li><li><a href="#23-inserting-data-example">2.3. Inserting Data Example</a></li></ul></li><li><a href="#references-and-additional-resources">References and Additional Resources</a></li><li><a href="#examples-repository">Examples Repository</a></li></ol><hr><h2 id="oauth2-authentication" tabindex="-1">OAuth2 Authentication <a class="header-anchor" href="#oauth2-authentication" aria-label="Permalink to &quot;OAuth2 Authentication&quot;">​</a></h2><p>OAuth2 is a widely-used authentication protocol that allows your application to access user data securely. Follow the steps below to set up OAuth2 authentication with HolySheets.</p><h3 id="_1-1-configuring-oauth2-credentials-in-google-cloud-console" tabindex="-1">1.1. Configuring OAuth2 Credentials in Google Cloud Console <a class="header-anchor" href="#_1-1-configuring-oauth2-credentials-in-google-cloud-console" aria-label="Permalink to &quot;1.1. Configuring OAuth2 Credentials in Google Cloud Console&quot;">​</a></h3><p>To enable HolySheets to access your Google Sheets securely, you need to configure OAuth2 credentials in the Google Cloud Console.</p><ol><li><p><strong>Access Google Cloud Console:</strong></p><ul><li>Navigate to <a href="https://console.cloud.google.com/" target="_blank" rel="noreferrer">Google Cloud Console</a>.</li></ul></li><li><p><strong>Select or Create a Project:</strong></p><ul><li>Click on the project dropdown at the top-left corner.</li><li>Select an existing project or click <strong>&quot;New Project&quot;</strong> to create a new one.</li></ul></li><li><p><strong>Enable the Google Sheets API:</strong></p><ul><li>From the left sidebar, go to <strong>&quot;APIs &amp; Services&quot; &gt; &quot;Library&quot;</strong>.</li><li>Search for <strong>&quot;Google Sheets API&quot;</strong>.</li><li>Click on <strong>&quot;Google Sheets API&quot;</strong> from the search results.</li><li>Click <strong>&quot;Enable&quot;</strong>.</li></ul></li><li><p><strong>Configure OAuth Consent Screen:</strong></p><ul><li>In the left sidebar, navigate to <strong>&quot;APIs &amp; Services&quot; &gt; &quot;OAuth consent screen&quot;</strong>.</li><li>Choose <strong>&quot;External&quot;</strong> and click <strong>&quot;Create&quot;</strong>.</li><li>Fill in the required details: <ul><li><strong>App Name:</strong> e.g., <code>HolySheets Documentation</code>.</li><li><strong>User Support Email:</strong> Your email address.</li><li><strong>Developer Contact Information:</strong> Your email address.</li></ul></li><li>Click <strong>&quot;Save and Continue&quot;</strong>.</li><li><strong>Add Scopes:</strong><ul><li>Click <strong>&quot;Add or Remove Scopes&quot;</strong>.</li><li>Add the following scope:<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://www.googleapis.com/auth/spreadsheets</span></span></code></pre></div></li><li>Click <strong>&quot;Update&quot;</strong> and then <strong>&quot;Save and Continue&quot;</strong>.</li></ul></li><li><strong>Add Test Users:</strong><ul><li>In the <strong>&quot;Test users&quot;</strong> section, add your Google account email (e.g., <code>josetelesmaciel@gmail.com</code>).</li><li>Click <strong>&quot;Save and Continue&quot;</strong>.</li></ul></li><li><strong>Finalize Configuration:</strong><ul><li>Skip the optional sections and click <strong>&quot;Save and Continue&quot;</strong> until you finish.</li></ul></li></ul></li><li><p><strong>Create OAuth2 Credentials:</strong></p><ul><li>From the left sidebar, go to <strong>&quot;APIs &amp; Services&quot; &gt; &quot;Credentials&quot;</strong>.</li><li>Click <strong>&quot;Create Credentials&quot;</strong> &gt; <strong>&quot;OAuth client ID&quot;</strong>.</li><li>Select <strong>&quot;Web application&quot;</strong> as the application type.</li><li><strong>Name:</strong> e.g., <code>HolySheets OAuth Client</code>.</li><li><strong>Authorized Redirect URIs:</strong><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://developers.google.com/oauthplayground</span></span></code></pre></div></li><li>Click <strong>&quot;Create&quot;</strong>.</li><li><strong>Retrieve Credentials:</strong><ul><li>After creation, a dialog will display your <strong>Client ID</strong> and <strong>Client Secret</strong>.</li><li><strong>Copy</strong> these values securely; you&#39;ll need them for your project.</li></ul></li></ul></li></ol><h3 id="_1-2-obtaining-a-refresh-token" tabindex="-1">1.2. Obtaining a Refresh Token <a class="header-anchor" href="#_1-2-obtaining-a-refresh-token" aria-label="Permalink to &quot;1.2. Obtaining a Refresh Token&quot;">​</a></h3><p>A <strong>refresh token</strong> allows your application to obtain new access tokens without user intervention. Follow these steps to obtain a refresh token using the <strong>OAuth 2.0 Playground</strong>.</p><ol><li><p><strong>Access OAuth 2.0 Playground:</strong></p><ul><li>Navigate to <a href="https://developers.google.com/oauthplayground" target="_blank" rel="noreferrer">OAuth 2.0 Playground</a>.</li></ul></li><li><p><strong>Configure to Use Your Own OAuth Credentials:</strong></p><ul><li>Click the <strong>gear icon (⚙️)</strong> in the top-right corner.</li><li>Check <strong>&quot;Use your own OAuth credentials&quot;</strong>.</li><li>Enter your <strong>Client ID</strong> and <strong>Client Secret</strong> obtained earlier.</li><li>Click <strong>&quot;Close&quot;</strong>.</li></ul></li><li><p><strong>Select Scopes:</strong></p><ul><li>In <strong>&quot;Step 1&quot;</strong>, input the following scope:<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://www.googleapis.com/auth/spreadsheets</span></span></code></pre></div></li><li>Click <strong>&quot;Authorize APIs&quot;</strong>.</li></ul></li><li><p><strong>Authorize Access:</strong></p><ul><li>Log in with your Google account (<code>youremail@emailprovider.com</code>).</li><li>Grant the requested permissions.</li></ul></li><li><p><strong>Exchange Authorization Code for Tokens:</strong></p><ul><li>In <strong>&quot;Step 2&quot;</strong>, click <strong>&quot;Exchange authorization code for tokens&quot;</strong>.</li><li>You will receive an <strong>Access Token</strong> and a <strong>Refresh Token</strong>.</li><li><strong>Copy the Refresh Token</strong> and keep it secure; you&#39;ll need it for your project.</li></ul></li></ol><h3 id="_1-3-integrating-oauth2-with-holysheets" tabindex="-1">1.3. Integrating OAuth2 with HolySheets <a class="header-anchor" href="#_1-3-integrating-oauth2-with-holysheets" aria-label="Permalink to &quot;1.3. Integrating OAuth2 with HolySheets&quot;">​</a></h3><p>With your OAuth2 credentials and refresh token obtained, integrate OAuth2 authentication into your existing HolySheets project.</p><h4 id="_1-3-1-initializing-the-oauth2-client" tabindex="-1">1.3.1. Initializing the OAuth2 Client <a class="header-anchor" href="#_1-3-1-initializing-the-oauth2-client" aria-label="Permalink to &quot;1.3.1. Initializing the OAuth2 Client&quot;">​</a></h4><p>Create a file named <code>auth.ts</code> in your project&#39;s <code>src</code> directory to handle OAuth2 client initialization.</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/auth.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { google } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;googleapis&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> clientId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;YOUR_CLIENT_ID_HERE&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> clientSecret</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;YOUR_CLIENT_SECRET_HERE&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> redirectUri</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://developers.google.com/oauthplayground&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> refreshToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;YOUR_REFRESH_TOKEN_HERE&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Initializes the OAuth2 client.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Configured OAuth2 client.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initializeOAuth2Client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> oauth2Client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> google.auth.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OAuth2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    clientId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    clientSecret,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    redirectUri</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  oauth2Client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setCredentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    refresh_token: refreshToken</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> oauth2Client</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>Note</strong>: Replace &#39;YOUR_CLIENT_ID_HERE&#39;, &#39;YOUR_CLIENT_SECRET_HERE&#39;, and &#39;YOUR_REFRESH_TOKEN_HERE&#39; with your actual credentials obtained from the previous steps.</p><h4 id="_1-3-2-integrating-holysheets-with-oauth2" tabindex="-1">1.3.2. Integrating HolySheets with OAuth2 <a class="header-anchor" href="#_1-3-2-integrating-holysheets-with-oauth2" aria-label="Permalink to &quot;1.3.2. Integrating HolySheets with OAuth2&quot;">​</a></h4><p>Create or update your index.ts file in the src directory to set up HolySheets with the OAuth2 client.</p><div class="language-Typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/index.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HolySheets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;holysheets&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { initializeOAuth2Client } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./auth&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> spreadsheetId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;YOUR_SPREADSHEET_ID_HERE&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Initializes the HolySheets instance with OAuth2 authentication.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> An instance of HolySheets configured with OAuth2.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initializeHolySheets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spreadsheetId) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SPREADSHEET_ID is not defined.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> oauth2Client</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initializeOAuth2Client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sheets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HolySheets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    spreadsheetId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    auth: oauth2Client,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Replace &#39;Sheet1&#39; with the name of your sheet/tab</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sheets.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">base</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;{ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Sheet1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> initializeHolySheets</span></span></code></pre></div><p><strong>Note</strong>: Replace &#39;YOUR_SPREADSHEET_ID_HERE&#39; with your actual Google Sheets ID.</p>`,23)]))}const u=i(e,[["render",l]]);export{d as __pageData,u as default};
